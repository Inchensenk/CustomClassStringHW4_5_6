
#include "StringEx.h"


/*          Homework 4
Написать класс StringEx(строка)
* постфикс* Ex добавть дабы различать с системным классом string

В классе должны быть :
-конструктор по умолчанию
- конструктор с параметром в который мы помещаем массив чаров
- конструктор копирования(обязательно!!!)
- деструктор, который очистит динамические данные
- метод конкатенации
- метод split - разделяет строку на подстроки по символу разделителю("29/11/2021 года" -> {"29", "11", "2021 года"})
- метод insert - вставляет заданный текст на позицию("first".->Insert("second", 3) ==> "firsecondst")
- метод contains - ищет вхождение подстроки в строке, например "tai" в "contains"*/

/*          Homework 5
Дополнить класс String перегрузками операций.

 - Придумать и реализовать перегрузки операций для методов concat, split, contains.*/

/*          Homework 6
Дополнить класс String новыми методами и перегрузками операций.

- дополнить класс методами isEmpty, size, clear
- добавить по необходимости иные методы, упрощающие работу с классом

- добавить перегрузку оператора вывода в консоль
- добавить конструктор копирования и перегрузку оператора присваивания
- добавить перегрузку оператора индексации
- добавить перегрузку операторов сравнения*/

int main()
{
    //инициализация str строкой "Hello" при помощи конструктора с параметром
    StringEx str("Hello");

    //инициализация str2 строкой "World" при помощи конструктора с параметром
    StringEx str2("World");

    //конокотанация при помощи перегруженного оператора +
    StringEx result = str + str2;

    //вывод результирующей строки
    result.print();

    //вывод размера  строки
    cout << str.Length() << endl;
    cout << str2.Length() << endl;
    cout << result.Length() << endl;
    


    // "==" фактически означает: str.operator==(str2), str в данном случае это this объект, а other - это тот объект, который мередаем параметром (то есть str2)
    //просто компилятор позволяет это все не писать: (bool equal = str.operator==(str2)), а просто можно писать так:  (bool equal = str == str2;) чтобы было проще
    bool equal = str == str2;

    str.print();
    cout << endl;
    str[0] = 'S';
    str.print();


    return 0;
}

